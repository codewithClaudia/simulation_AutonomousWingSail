<?xml version="1.0" ?>


<!--  xacro macros for anemometer.-->

<xacro xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Anemometer Wind -->

  <link name="anemometer_wind_link">
     <inertial>
       <origin rpy="0 0 0" xyz="0 0 0"/>
       <mass value="1"/>
       <inertia
         ixx="0.01"
         ixy="0"
         iyy="0.01"
         ixz="0"
         iyz="0"
         izz="0.01"/>
      </inertial>

      <collision name="collision">
        <origin rpy="1.570796327 0 0" xyz="0 0 0" />
        <geometry>
          <mesh filename="package://usv_sim/meshes/simpleHull3/anemometer_wind.dae" scale="0.0004 0.0004 0.0004"/> 
        </geometry>
      </collision>

      <visual name="visual">
        <origin rpy="1.570796327 0 0" xyz="0 0 0" />
        <geometry>
          <mesh filename="package://usv_sim/meshes/simpleHull3/anemometer_wind.dae" scale="0.0004 0.0004 0.0004"/> 
        </geometry>
      </visual>
  </link>


  <joint name="anemometer_wind_joint" type="revolute">
	<origin rpy="0 0 0" xyz="0.02 0 1.80"/>
      <parent link="sail"/>
      <child link="anemometer_wind_link"/>  
     <dynamics damping="1.0"/>
      <axis xyz="0 0 1"/>
      <limit effort="100" velocity="70" lower="0" upper="0" />
  </joint>

  <!-- Anemometer Vane -->

  <link name="anemometer_vane_link">
       <inertial>
         <origin rpy="0 0 0" xyz="0 0 0"/>
         <mass value="1"/>
         <inertia
           ixx="0.01"
           ixy="0"
           iyy="0.01"
           ixz="0"
           iyz="0"
           izz="0.01"/>
        </inertial>


        <collision name="collision">
          <origin rpy="0 0 ${PI}" xyz="0 0 0" /> 
       <!--   <origin rpy="0 0 -1.570796327" xyz="0 0 0" /> -->
          <geometry>
          <mesh filename="package://usv_sim/meshes/simpleHull3/anemometer_vane.dae" scale="0.001 0.001 0.001"/> 
			<!--	    <mesh>
				          <uri>model://usv_sim/meshes/simpleHull3/anemometer_vane.stl</uri>
                  <scale>0.001 0.001 0.001</scale>
				    </mesh> -->
        </geometry>
        </collision>

        <visual name="visual">
          <origin rpy="0 0 ${PI}" xyz="0 0 0" /> 
      <!--    <origin rpy="0 0 -1.570796327" xyz="0 0 0" /> -->
         <geometry>
          <mesh filename="package://usv_sim/meshes/simpleHull3/anemometer_vane.dae" scale="0.001 0.001 0.001"/> 
			<!--	    <mesh>
				          <uri>model://usv_sim/meshes/simpleHull3/anemometer_vane.stl</uri>
                  <scale>0.001 0.001 0.001</scale>
				    </mesh>-->
        </geometry>
        </visual>
  </link>


  <joint name="anemometer_vane_joint" type="revolute">
      <parent link="anemometer_wind_link"/>
      <child link="anemometer_vane_link"/>
      <origin rpy="0 0 0" xyz="0 0 0.01"/>
      <dynamics damping="1.0"/>
      <axis xyz="0 0 1"/>
      <limit effort="100" velocity="70" lower="-${PI}" upper="${PI}" />
  </joint>

  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="anemometer_vane_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


<!-- Plugin for Anemometer Sensor -->


<gazebo>
    <plugin name="anemometer_plugin" filename="libanemometer.so">
        <robotNamespace>sailboat</robotNamespace>
        <frameId>anemometer_vane_link</frameId>
        <topicName>wind/apparent</topicName>
        <link>base_link</link>
        <link_type>base_link</link_type>
        <cp> 0 0 0 </cp>
      </plugin>
</gazebo>


</xacro>

